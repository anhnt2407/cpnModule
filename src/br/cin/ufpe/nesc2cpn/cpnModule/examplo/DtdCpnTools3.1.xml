<?xml version="1.0" encoding="UTF-8"?>

<!--
    Document   : DtdCpnTools3.1.xml
    Created on : 10 de Outubro de 2011, 08:31
    Author     : Davi
    Description:
        Purpose of the document follows.
-->

<!-- DTD for Textual Interchange Format for Design/CPN ver. 3.1 -->

<!-- Changes by Peter Andersen <datpete@daimi.au.dk> based on actual documents:
     1. Added 'picture' and made 'shape' derive 'picture' too.
     2. Added 'palette' to attribute list of 'pageattr'
     3. Changed 'orient' attribute of 'aux-conn' and
        'substcon' to be 'orientation'.
     4. The 'lintyps' called 'DotDash' has been
        renamed to 'DotDashed'.
-->

<!-- Base element -->
<!DOCTYPE cpn [

<!-- Possible shapes for obejcts: rbox is a rounded box -->
<!ENTITY % shape        "(box | ellipse | poly | line | label | wedge |
                         rbox | seg-conn | picture)">

<!-- Legal attributes for objects -->
<!ENTITY % atts         "%shape;? & posattr? & fillattr? & lineattr? &
			textattr? & flags? & layering?">

<!-- Line types: -->
<!ENTITY % lintyps      "(Solid | Dashed | DotDashed | GroupInd |
                        FlashInd | None | Null | Dotted)">

<!-- Colours. These colours corresponds to the standard colours of
     HTML: -->
<!--
Name and RGB value:
    Black  = #000000    Green  = #008000
    Silver = #C0C0C0    Lime   = #00FF00
    Gray   = #808080    Olive  = #808000
    White  = #FFFFFF    Yellow = #FFFF00
    Maroon = #800000    Navy   = #000080
    Red    = #FF0000    Blue   = #0000FF
    Purple = #800080    Teal   = #008080
    Fuchsia= #FF00FF    Aqua   = #00FFFF
-->
<!ENTITY % cols		"(Black | Maroon | Gray | Olive |
                        Purple | Silver | Red | Teal |
                        Navy | Fucia | Blue | Aqua |
                        Green | Lime | Yellow | White)">

<!-- The possible orientations of an arc:
     BOTHDIR = Bidirectional arc: O<->[]
     NODIR = Arc without arrows: O-[]
     PtoT = Arc from Place to Transition: 0->[]
     TtoP = Arc from Transition to Place: []->O
-->
<!ENTITY % arcors      "(BOTHDIR | NODIR | PtoT | TtoP)">

<!-- Possible types of fusion sets:
     Global = Global fusion set.
     Page = Page Fusion set.
     Instance = Instance Fusion Set -->
<!ENTITY % fustyps     "(Global | Page | Instance)">

<!-- Possible orientations of an auxiliary connector: -->
<!-- BOTHDIR = Bidirectional connector.
     NODIR = Nondirectional connector.
     1to2 = Connector from object1 to object2
     2to1 = Connector from object2 to object1 -->
<!ENTITY % orients     "(BOTHDIR | NODIR | 1to2 | 2to1)">

<!-- Possible fill patterns for objects -->
<!ENTITY % pats        "(None | Solid | AlmostSolid | InverseHeavyDotted |
                       Chessboard | InverseOrderedDotted |
		       NarrowVertical | FilledDiagonals
		       | WideVertical | Speckled | RandomDotted |
		       NarrowGrid | Bricks | SparselyDotted |
		       ShortDiagonals | Lightbubbles | PieTop |
		       Buttercups | Waffles |
		       LightDotted | MediumDotted | LightGray |
		       OrderedDotted | NarrowHorizontal |
		       NarrowDiagonal | WideHorizontal | WideDiagonal
		       | DottedBoxes | WideGrid | DiagonalBricks |
		       Holiday | Carrots | DiagonalScales |
		       RoundScales | Mountains | HeavyBubbles |
		       Diamonds)">

<!-- Possible font names. -->
<!ENTITY % fonts       "(Chicago | Courier | Geneva | Helvetica | Monaco
		       | Times | Symbol)">

<!-- The justification of text (left aligned, centered or right
     aligned. -->
<!ENTITY % justs       "(Left | Centered | Right)">

<!-- Possible porttypes: -->
<!-- In = Input Port.
     Out = Output Port.
     InOut = Input/Output Port
     General = General Port -->
<!ENTITY % prttyps     "(In | Out | InOut | General)">

<!-- Possible layering of object -->
<!-- Copy -->
<!-- IOR = Inclusive OR -->
<!-- XOR = Exclusive OR -->
<!-- INV = Inverse the objects covered -->
<!ENTITY % laytyps     "(Copy | IOR | XOR | INV)">

<!-- Possible attributes of objects: -->
<!--
   posattr = Position attributes
   fillattr = Fill Attributes
   lineattr = Line Attributes
   textattr = Text Attributes
   flags = Various flags (see definition of flags)
   layering = Layering logic of object -->
<!ENTITY % objatts     "posattr | fillattr | lineattr | textattr |
                        flags | layering">

<!-- Objects legal within a page: -->
<!-- place = Place
     trans = Transition
     tempdecl = Temporary Declaration Node
     globdecl = Global Declaration Node
     locdecl = Local Declaration Node
     aux = Auxiliary Object
     aux-conn = Auxiliary Connector -->
<!ENTITY % pageobs     "place | trans | tempdecl | globdecl | locdecl
                        | arc | aux | aux-conn">

<!-- Blocks legal within a place block: -->
<!-- name = Name block.
     type = Type declaration block.
     initmark = Initial marking block.
     aux-endp = Auxiliary endpoint block
     aux-std = Auxiliary region block
     fus-key = Fusion key region block
     portkreg = Port key region block
     mark-key = Marking key region block -->

<!ENTITY % placeob    "name | type | initmark | aux-endp | aux-std |
                       fus-key | portkreg | mark-key">

<!-- Blocks legal within a place block: -->
<!-- name = Name block
     cond = Condition block
     code-key = Code key region block
     log-key = Log key region block
     time = Time block
     aux-endp = Auxiliary endpoint region block
     hier-key = Hierarchy key region block.
     aux-enab = Enabling region. -->
<!ENTITY % transob    "name | cond | code-key | log-key | time |
                      aux-endp | hier-key | aux-enab">

<!-- Elements recognised on outermost level of a cpn-document:
     Information about generator tool.
     One or more ordinary pages.
     Zero or one hierarchy page -->
<!ELEMENT cpn           O O             ((page)* & hierpage? & generator?)>


<!-- Text blocks are recognised to contain Character Data -->
<!ELEMENT text     - - CDATA>

<!-- Elements and attributes recognised within a page -->
<!ELEMENT page     - -  (text? & (%pageobs; | %shape; | pageattr | fillattr |
                        lineattr | posattr | winattr | modeattr | mult)*)>
<!ATTLIST page         id             ID             #IMPLIED>

<!-- Elements and attributes recognised within a place -->
<!ELEMENT place    - -  (text? & (%placeob; | %shape; | %objatts; | port)*)>
<!ATTLIST place        id             ID             #IMPLIED>

<!-- Elements and attributes recognised within a name block -->
<!ELEMENT name     - -  (text? & (aux-std | %shape; | %objatts; | regattr)*)>
<!ATTLIST name         id             ID             #IMPLIED>

<!-- Elements and attributes recognised within a type block -->
<!ELEMENT type     - -  (text? & (aux-std | %shape; | %objatts; | regattr)*)>
<!ATTLIST type         id             ID             #IMPLIED>

<!-- Elements and attributes recognised within an initial marking block -->
<!ELEMENT initmark - -  (text? & (aux-std | %shape; | %objatts; | regattr)*)>
<!ATTLIST initmark     id             ID             #IMPLIED>

<!-- Elements and attributes recognised within a transition block -->
<!ELEMENT trans    - -  (text? & (%transob; | %shape; | %objatts; | modeattr |
                        subst)*)>
<!ATTLIST trans        id             ID             #IMPLIED>

<!-- Elements and attributes recognised within a condition block -->
<!ELEMENT cond     - -  (text? & (aux-std | %shape; | %objatts; | regattr)*)>
<!ATTLIST cond         id             ID             #IMPLIED>

<!-- Elements and attributes recognised within a code key region block -->
<!ELEMENT code-key - -  (text? & (aux-std | code | %shape; | %objatts;
                        | regattr)*)>
<!ATTLIST code-key     id             ID             #IMPLIED>

<!-- Elements and attributes recognised within a code region block -->
<!ELEMENT code     - -  (text? & (aux-std | %shape; | %objatts; | regattr)*)>
<!ATTLIST code         id             ID             #IMPLIED>

<!-- Elements and attributes recognised within a log key region block -->
<!ELEMENT log-key  - -  (text? & (aux-std | log | %shape; | %objatts;
                        | regattr)*)>
<!ATTLIST log-key      id             ID             #IMPLIED>

<!-- Elements and attributes recognised within a log region block -->
<!ELEMENT log      - -  (text? & (aux-std | %shape; | %objatts; | regattr)*)>
<!ATTLIST log          id             ID             #IMPLIED>

<!-- Elements and attributes recognised within a time block -->
<!ELEMENT time     - -  (text? & (aux-std | %shape; | %objatts; | regattr)*)>
<!ATTLIST time         id             ID             #IMPLIED>

<!-- Elements and attributes recognised within a hierarchy key region block -->
<!ELEMENT hier-key - -  (text? & (aux-std | hierarch | %shape; |
                        %objatts; | regattr)*)>
<!ATTLIST hier-key     id             ID             #IMPLIED>

<!-- Elements and attributes recognised within a hierarchy region block -->
<!ELEMENT hierarch - -  (text? & (aux-std | %shape; | %objatts; | regattr)*)>
<!ATTLIST hierarch      id             ID             #IMPLIED>

<!-- Elements and attributes recognised within a fusion key region block -->
<!ELEMENT fus-key  - -  (text? & (aux-std | fusion | %shape; |
                        %objatts; | regattr)*)>
<!ATTLIST fus-key      id             ID             #IMPLIED>

<!-- Elements and attributes recognised within a fusion region block -->
<!ELEMENT fusion   - -  (text? & (aux-std | %shape; | %objatts; | regattr)*)>
<!ATTLIST fusion       id             ID             #IMPLIED
		       type	      %fustyps;	     #IMPLIED
>

<!-- Elements and attributes recognised within an arc block -->
<!ELEMENT arc      - -  (text? & (annot | aux-std | %shape; | lineattr |
                        placeend | transend | textattr | flags | connattr |
			fillattr | layering)*)>
<!ATTLIST arc          id             ID             #IMPLIED
		       orientation    %arcors;	     #IMPLIED
>

<!-- Elements and attributes recognised within an arc annotation block -->
<!ELEMENT annot    - -  (text? & (aux-std | %shape; | %objatts; | regattr)*)>
<!ATTLIST annot        id             ID             #IMPLIED>

<!-- Elements and attributes recognised within an local declaration block -->
<!ELEMENT locdecl  - -  (text? & (aux-endp | aux-std | %shape; | %objatts;)*)>
<!ATTLIST locdecl      id             ID             #IMPLIED>

<!-- Elements and attributes recognised within a temporary declaration
block -->
<!ELEMENT tempdecl - -  (text? & (aux-endp | aux-std | %shape; | %objatts;)*)>
<!ATTLIST tempdecl     id             ID             #IMPLIED>

<!-- Elements and attributes recognised within a global declaration block -->
<!ELEMENT globdecl - -  (text? & (aux-endp | aux-std | %shape; | %objatts;)*)>
<!ATTLIST globdecl     id             ID             #IMPLIED>

<!-- Elements and attributes recognised within an auxiliary object block -->
<!ELEMENT aux      - -  (text? & (aux-endp | aux-std | %shape; | %objatts;)*)>
<!ATTLIST aux          id             ID             #IMPLIED>

<!-- Elements and attributes recognised within an auxiliary connector block -->
<!ELEMENT aux-conn - -  (text? & (aux-std | %shape; | lineattr | node1 |
                        node2 | textattr | flags | connattr | fillattr |
                        layering)*)>
<!ATTLIST aux-conn     id             ID             #IMPLIED
                       orientation    %orients;      #IMPLIED
>

<!-- Elements and attributes recognised within an auxiliary standard region
     block -->
<!ELEMENT aux-std  - -  (text? & (aux-std | %shape; | %objatts; | regattr)*)>
<!ATTLIST aux-std      id             ID             #IMPLIED>

<!-- Elements and attributes recognised within an auxiliary endpoint region
     block -->
<!ELEMENT aux-endp - -  (text? & (aux-std | %shape; | %objatts; | regattr)*)>
<!ATTLIST aux-endp     id             ID             #IMPLIED>

<!-- Elements and attributes recognised within a port key region block -->
<!ELEMENT portkreg - -  (text? & (aux-std | portreg | %shape; |
                        %objatts; | regattr)*)>
<!ATTLIST portkreg     id             ID             #IMPLIED>

<!-- Elements and attributes recognised within a port region block -->
<!ELEMENT portreg  - -  (text? & (aux-std | %shape; | %objatts; | regattr)*)>
<!ATTLIST portreg      id             ID             #IMPLIED>

<!-- Elements and attributes recognised within a marking key region block -->
<!ELEMENT mark-key - -  (text? & (aux-std | mark | %shape; | %objatts;
                        | regattr)*)>
<!ATTLIST mark-key     id             ID             #IMPLIED>

<!-- Elements and attributes recognised within a marking region block -->
<!ELEMENT mark     - -  (text? & (aux-std | %shape; | %objatts; | regattr)*)>
<!ATTLIST mark         id             ID             #IMPLIED>

<!-- Elements and attributes recognised within an auxiliary enabling
     region  block -->
<!ELEMENT aux-enab - -  (text? & (%shape; | %objatts; | regattr)*)>
<!ATTLIST aux-enab     id             ID             #IMPLIED>

<!-- Elements and attributes recognised within a hierarchy page block. -->
<!ELEMENT hierpage - -  (text? & (aux | aux-conn | pagenode | substcon
                        | %shape; | pageattr | fillattr | lineattr |
			posattr | winattr)*)>
<!ATTLIST hierpage     id             ID             #IMPLIED>

<!-- Elements and attributes recognised within an hierarchy page node
block. -->
<!ELEMENT pagenode - -  (text? & (aux-std | pgmodkey | %shape; | %objatts;)*)>
<!ATTLIST pagenode     id             ID             #IMPLIED
                       pageref        IDREF          #IMPLIED>

<!-- Elements and attributes recognised within a page mode key region
     block -->
<!ELEMENT pgmodkey - -  (text? & (pagemode | aux-std | %shape; |
                        %objatts; | regattr)*)>
<!ATTLIST pgmodkey     id             ID             #IMPLIED>

<!-- Elements and attributes recognised within a page mode region block -->
<!ELEMENT pagemode - -  (text? & (aux-std | %shape; | %objatts; | regattr)*)>
<!ATTLIST pagemode     id             ID             #IMPLIED>

<!-- Elements and attributes recognised within a substitution connector
block -->
<!ELEMENT substcon - -  (text? & (aux-std | substtag | %shape; | lineattr |
                        sup-page | sub-page | textattr | flags | connattr |
                        fillattr | layering)*)>
<!ATTLIST substcon     id             ID             #IMPLIED
                       orientation    %orients;      #IMPLIED
>

<!-- Elements and attributes recognised within a substitution tag block -->
<!ELEMENT substtag - -  (text? & (aux-std | %shape; | %objatts; | regattr)*)>
<!ATTLIST substtag     id             ID             #IMPLIED
                       transref       IDREF	     #IMPLIED
>

<!-- Name and version of tool which generated file -->
<!ELEMENT generator     - O EMPTY>
<!ATTLIST generator         tool      CDATA
                            version   CDATA>

<!-- Position attributes: -->
<!-- x : x coordinate in mm
     y:  x coordinate in mm

SGML doesn't allow a definition of numbers which might be negative,
hence the use of CDATA as type for the coordinates.

The coordinate system looks like this:
      ^
      | y
      |
      |
      |      x
______________\
      |       /
      |
      |
      |
-->

<!ELEMENT posattr  - O EMPTY>
<!ATTLIST posattr      x              CDATA          #IMPLIED
                       y	      CDATA	     #IMPLIED
>

<!-- Definition of various shapes.

The attributes:
     h = height (in mm)
     w = width (in mm)

These are declared as CDATA since SGML has no way of defining real
numbers.

Decimal seperator is '.'.

     curv = curvature (0-360)
     stangle = start angle (0-360)
     endangle = end angle (0-360)
     points = sequence of points "(x1,y1)(x2,y2)...(xn,yn)"
-->


<!ELEMENT box      - O EMPTY>
<!ATTLIST box          h              CDATA          #IMPLIED
                       w	      CDATA	     #IMPLIED
>

<!ELEMENT ellipse  - O EMPTY>
<!ATTLIST ellipse      h              CDATA          #IMPLIED
                       w	      CDATA	     #IMPLIED
>

<!ELEMENT poly     - O EMPTY>
<!ATTLIST poly         points         CDATA          #IMPLIED>

<!ELEMENT line     - O EMPTY>
<!ATTLIST line         points         CDATA          #IMPLIED>

<!ELEMENT label    - O EMPTY>

<!ELEMENT wedge    - O EMPTY>
<!ATTLIST wedge        h              CDATA          #IMPLIED
                       w	      CDATA	     #IMPLIED
		       stangle        NUMBER	     #IMPLIED
                       endangle       NUMBER         #IMPLIED
>

<!ELEMENT rbox     - O EMPTY>
<!ATTLIST rbox         h              CDATA          #IMPLIED
                       w	      CDATA	     #IMPLIED
                       curv	      NUMBER	     #IMPLIED
>

<!ELEMENT seg-conn - O EMPTY>
<!ATTLIST seg-conn     curv           NUMBER         #IMPLIED
		       points         CDATA          #IMPLIED
>


<!-- Different attributes related to objects: -->
<!ELEMENT fillattr - O EMPTY>
<!ATTLIST fillattr     pattern        %pats;         #IMPLIED
                       colour         %cols;	     #IMPLIED>

<!-- Line attributes (type, thichness and colour).
     Thickness is measured in points -->
<!ELEMENT lineattr - O EMPTY>
<!ATTLIST lineattr     type           %lintyps;      #IMPLIED
                       thick	      NUMBER         #IMPLIED
                       colour         %cols;	     #IMPLIED
>

<!-- Text attributes. The different attributes declared to have
type CDATA may assume values TRUE or FALSE. SGML doesn't allow more
than one attribute in an ATTLIST to have same group.
Hence:
                       bold          (TRUE | FALSE)
is legal, but
                       bold          (TRUE | FALSE)
                       italic        (TRUE | FALSE)
is not. -->
<!ELEMENT textattr - O EMPTY>
<!ATTLIST textattr     font           %fonts;        #IMPLIED
                       just           %justs;        #IMPLIED
                       colour         %cols;         #IMPLIED
                       bold           CDATA          #IMPLIED
                       italic         CDATA	     #IMPLIED
                       underlin       CDATA	     #IMPLIED
                       outline        CDATA	     #IMPLIED
                       shadow         CDATA	     #IMPLIED
                       condense       CDATA	     #IMPLIED
                       extend         CDATA	     #IMPLIED
                       scbar          CDATA	     #IMPLIED
                       size           NUMBER         #IMPLIED
>

<!-- Object flags -->
<!-- All flags attributes might assume values TRUE or FALSE.
     mask - object pickable or not.
     omit - object showable or not
     nobound - object boundary visible or not
     visible - visible or not -->

<!ELEMENT flags    - O EMPTY>
<!ATTLIST flags        mask           CDATA          #IMPLIED
                       omit	      CDATA	     #IMPLIED
                       nobound	      CDATA	     #IMPLIED
                       nosizing	      CDATA	     #IMPLIED
                       visible	      CDATA	     #IMPLIED
>

<!-- Place end of an arc.
     idref is a reference to the id of the place to connect to.
     endpoint is a reference to the object that the arc physically
     connects to.
     Since only one IDREF is recognised inside an ATTLIST, endpoint
     is declared to be CDATA.
-->
<!ELEMENT placeend - O EMPTY>
<!ATTLIST placeend     idref          IDREF          #IMPLIED
                       endpoint       CDATA	     #IMPLIED
>

<!-- Transition end of an arc. Same reasoning as for the placeend -->
<!ELEMENT transend - O EMPTY>
<!ATTLIST transend     idref          IDREF          #IMPLIED
                       endpoint       CDATA	     #IMPLIED
>

<!-- First object connected by a connector -->
<!ELEMENT node1    - O EMPTY>
<!ATTLIST node1        idref          IDREF          #IMPLIED>

<!-- Second object connected by a connector -->
<!ELEMENT node2    - O EMPTY>
<!ATTLIST node2        idref          IDREF          #IMPLIED>

<!-- Attributes for a page -->
<!-- name - name of page.
     number - the number of the page (this is NOT the id of the page)
     visbor - borders visible (TRUE/FALSE)
-->
<!ELEMENT pageattr - O EMPTY>
<!ATTLIST pageattr     name           CDATA          #IMPLIED
                       number         NUMBER         #IMPLIED
                       visbor         CDATA          #IMPLIED
                       palette        CDATA          #IMPLIED
>

<!-- Region attributes: -->
<!-- colorap - Colour as parent
     sizewp - resize with parent
     hoffset - horisontal offset (in mm)
     voffset - vertical offset (in mm)
-->

<!ELEMENT regattr  - O EMPTY>
<!ATTLIST regattr      colorap        CDATA          #IMPLIED
		       sizewp	      CDATA	     #IMPLIED
		       hoffset	      CDATA	     #IMPLIED
		       voffset	      CDATA	     #IMPLIED
>

<!-- Connector attributes -->
<!-- hdwidth - Arrow head width (in points)
     hdheight - Arrow head height (in points)
     txtwidth - Text width (in points)
     txtheight - Text height (in points)
-->
<!ELEMENT connattr - O EMPTY>
<!ATTLIST connattr     hdwidth        NUMBER         #IMPLIED
		       hdheight       NUMBER	     #IMPLIED
                       txtwidth	      NUMBER	     #IMPLIED
		       txtheight        NUMBER	     #IMPLIED
>

<!-- Window attributes -->
<!-- open - open on load (TRUE/FALSE)
     width - Width (in pixels).
     height - Height (in pixels) -->
<!ELEMENT winattr  - O EMPTY>
<!ATTLIST winattr      open           CDATA          #IMPLIED
                       width          NUMBER	     #IMPLIED
		       height	      NUMBER	     #IMPLIED
		       xpos	      NUMBER	     #IMPLIED
		       ypos	      NUMBER	     #IMPLIED
>

<!-- Mode attributes -->
<!-- Determines some simulation code options. -->
<!ELEMENT modeattr - O EMPTY>
<!ATTLIST modeattr     siminc         CDATA          #IMPLIED
                       observe        CDATA          #IMPLIED
                       propocc        CDATA          #IMPLIED
                       interact       CDATA          #IMPLIED
                       execcode       CDATA          #IMPLIED
>

<!-- For substitution transitions -->
<!-- subpage - The ID of the corresponding subpage
     portsock - List of port/socket assingments on the form:
       "(port1ID, socket1ID)(port2ID, socket2ID)...(portNID,
       socketID)"
-->
<!ELEMENT subst    - O EMPTY>
<!ATTLIST subst        subpage        IDREF          #IMPLIED
		       portsock	      CDATA	     #IMPLIED
>

<!-- Port type -->
<!ELEMENT port     - O EMPTY>
<!ATTLIST port         type           %prttyps;      #IMPLIED>

<!-- Superpage end of substitution connectors -->
<!ELEMENT sup-page - O EMPTY>
<!ATTLIST sup-page     idref          IDREF          #IMPLIED>

<!-- Subpage end of substitution connectors -->
<!ELEMENT sub-page - O EMPTY>
<!ATTLIST sub-page     idref          IDREF          #IMPLIED>

<!-- Multiplicity of page -->
<!-- insts - number of instances -->
<!ELEMENT mult     - O EMPTY>
<!ATTLIST mult     insts             NUMBER          #IMPLIED>

<!ELEMENT layering - O EMPTY>
<!ATTLIST layering     type           %laytyps;      #IMPLIED>

<!-- Picture: Added May 11 1999 by datpete@daimi.au.dk
     Filename is the path relative to the location of the diagram.
     The following convention is followed:
     - The iamge files are placed in a subdirectory:
       If a diagram is located in <path>/diagram.int, the related
       image files are placed in <path>/diagram.int_image/image<n>
     - Image files are stored without extension. This is to ease
       image conversion: Assume tha you have two tools: Tool1, which
       only supports GIF, and Tool2, which only supports JPEG.
       When moving from Tool1 to Tool2 it will be enough to convert
       the files without changing the .int files.
       [datpete]: An alternative could be to specify the filename
       without extension, but to store files *with* extension.
       The different versions of the tool should then themselves
       add the relevant extension to the filename found in the 
       filename attribute.
       [datpete]: In the new version we will probably use PNG files
       on all platforms.
 -->
<!ELEMENT picture  - O EMPTY>
<!ATTLIST picture      h              CDATA          #IMPLIED
                       w              CDATA          #IMPLIED
                       filename       CDATA          #IMPLIED
>


]>


